#security:
#    # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
#    providers:
#        in_memory: { memory: ~ }
#    firewalls:
#        dev:
#            pattern: ^/(_(profiler|wdt)|css|images|js)/
#            security: false
#        main:
#            anonymous: true
#
#            # activate different ways to authenticate
#
#            # http_basic: true
#            # https://symfony.com/doc/current/security.html#a-configuring-how-your-users-will-authenticate
#
#            # form_login: true
#            # https://symfony.com/doc/current/security/form_login_setup.html
#
#    # Easy way to control access for large sections of your site
#    # Note: Only the *first* access control that matches will be used
#    access_control:
#        # - { path: ^/admin, roles: ROLE_ADMIN }
#        # - { path: ^/profile, roles: ROLE_USER }

security:
    encoders:
        App\Entity\User:
            algorithm: argon2i


    # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
    providers:
        # used to reload user from session & other features (e.g. switch_user)
        app_user_provider:
            entity:
                class: App\Entity\User
                property: email
        jwt:
            lexik_jwt: ~
        # used to reload user from session & other features (e.g. switch_user)

    firewalls:
        dev:
            pattern: ^/_(profiler|wdt)
            security: false
#        main:
#            stateless: true
#            anonymous: true
#            provider: app_user_provider
#            json_login:
#                check_path: /authentication_token
#                username_path: email
#                password_path: password
#                success_handler: lexik_jwt_authentication.handler.authentication_success
#                failure_handler: lexik_jwt_authentication.handler.authentication_failure
#            guard:
#                authenticators:
#                    - lexik_jwt_authentication.jwt_token_authenticator

        login:
            pattern:  ^/authentication_token
            stateless: true
            anonymous: true
            provider: app_user_provider
            json_login:
                check_path: /authentication_token
                username_path: email
                password_path: password
                success_handler: lexik_jwt_authentication.handler.authentication_success
                failure_handler: lexik_jwt_authentication.handler.authentication_failure

        nric_phone_birthday_login:
            pattern:  ^/login/nric-phone-birthdate
            stateless: true
            provider: app_user_provider
            guard:
                authenticators:
                    - App\Security\NricBirthdayPhoneAuthenticator

        refresh:
            pattern:  ^/token/refresh
            stateless: true
            anonymous: true

        main:
            stateless: true
            anonymous: true
            provider: jwt
            guard:
                authenticators:
                    - lexik_jwt_authentication.jwt_token_authenticator
    access_control:
        # ...
        - { path: ^/token/refresh, roles: IS_AUTHENTICATED_ANONYMOUSLY }
